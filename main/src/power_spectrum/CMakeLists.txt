function(enableGpuDirect exename)
    if(GPU_DIRECT)
        target_compile_definitions(${exename} PRIVATE USE_GPU_DIRECT)
    endif()
endfunction()

function(enableHEFFTE exename)
    if(SPH_EXA_WITH_HEFFTE)
        target_include_directories(${exename} PRIVATE ${SPH_EXA_WITH_HEFFTE}/include)
        target_include_directories(${exename} PRIVATE ${SPH_EXA_WITH_HEFFTE}/../fftw/include)
        target_include_directories(${exename} PRIVATE ${SPH_EXA_WITH_HEFFTE}/../fftwf/include)
        target_compile_definitions(${exename} PUBLIC HEFFTE_ENABLED)
        target_link_directories(${exename} PUBLIC ${SPH_EXA_WITH_HEFFTE}/lib)
        target_link_directories(${exename} PUBLIC ${SPH_EXA_WITH_HEFFTE}/../fftw/lib)
        target_link_directories(${exename} PUBLIC ${SPH_EXA_WITH_HEFFTE}/../fftwf/lib)
        target_link_libraries(${exename} PRIVATE heffte fftw3 fftw3f)
    else()
        message(STATUS "No HeFFTe support")
    endif()
endfunction()

set(exename power_spectrum)
add_executable(${exename} power_spectrum.cpp)
target_include_directories(${exename} PRIVATE ${SPH_EXA_INCLUDE_DIRS})
target_link_libraries(${exename} PRIVATE io sim_init observables OpenMP::OpenMP_CXX ${MPI_CXX_LIBRARIES})
enableHEFFTE(${exename})
install(TARGETS ${exename} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})

if(CMAKE_CUDA_COMPILER)
    add_executable(${exename}-cuda power_spectrum.cpp)
    target_include_directories(${exename}-cuda PRIVATE ${SPH_EXA_INCLUDE_DIRS})
    target_include_directories(${exename}-cuda PUBLIC ${CMAKE_BINARY_DIR}/main/src)
    target_compile_definitions(${exename}-cuda PRIVATE USE_CUDA)
    target_link_libraries(${exename}-cuda PRIVATE cstone_gpu ryoanji sph_gpu io sim_init_gpu observables_gpu OpenMP::OpenMP_CXX
        ${MPI_CXX_LIBRARIES} CUDA::cudart)
    enableGpuDirect(${exename}-cuda)
    install(TARGETS ${exename}-cuda RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})

elseif(CMAKE_HIP_COMPILER)
    add_executable(${exename}-hip power_spectrum.cpp)
    target_include_directories(${exename}-hip PRIVATE ${SPH_EXA_INCLUDE_DIRS})
    target_compile_definitions(${exename}-hip PRIVATE USE_CUDA THRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_HIP)
    target_link_libraries(${exename}-hip PRIVATE cstone_gpu ryoanji sph_gpu io sim_init_gpu observables_gpu OpenMP::OpenMP_CXX
        ${MPI_CXX_LIBRARIES} hip::host)
    set_target_properties(${exename}-hip PROPERTIES LINKER_LANGUAGE CXX)
    enableGpuDirect(${exename}-hip)
    install(TARGETS ${exename}-hip RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
endif()
